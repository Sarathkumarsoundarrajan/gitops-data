@Library('gitops-data') _

def PROJECT_SCM_URL = "https://github.com/Sarathkumarsoundarrajan/chd-portal.git"
def GITOPS_DATA_PROJECT_PATH = "chd/portal-react-cavinkare"
def PROJECT_NAME = util_extractProjectNameFromGitUrl("$PROJECT_SCM_URL")
def SONAR_ENVIRONMENTS = ["dev"]
def ENABLE_SONAR = false
def ENABLE_SONAR_QUALITY_GATE = false
def NODE_IMAGE = ""

pipeline {
    agent {
        kubernetes {
            yaml '''
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: some-label-value
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    command:
    - /busybox/cat
    tty: true
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"
    volumeMounts:
    - name: docker-config
      mountPath: /kaniko/.docker/
  volumes:
  - name: docker-config
    secret:
      secretName: docker-hub-creds
      items:
        - key: .dockerconfigjson
          path: config.json
'''
        }
    }
    stages {
        stage('Validate Workspace') {
            steps {
                container('kaniko') {
                    sh '''
                    echo "Checking if Dockerfile exists..."
                    if [ ! -f /workspace/Dockerfile ]; then
                        echo "ERROR: Dockerfile not found in /workspace!"
                        exit 1
                    fi
                    ls -lah /workspace
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                container('kaniko') {
                    sh '''
                    echo "Building and pushing image with Kaniko..."
                    /kaniko/executor \
                        --dockerfile=/workspace/Dockerfile \
                        --context=/workspace \
                        --destination=docker.io/sarath6400/chd-portal:6 \
                        --skip-tls-verify \
                        --verbosity=debug
                    '''
                }
            }
        }

        stage('Deploy Application') {
            steps {
                script {
                    template_react(
                        "$PROJECT_SCM_URL",
                        "$PROJECT_NAME",
                        "$GITOPS_DATA_PROJECT_PATH",
                        "$NODE_IMAGE",
                        ENABLE_SONAR,
                        ENABLE_SONAR_QUALITY_GATE,
                        SONAR_ENVIRONMENTS
                    )
                }
            }
        }
    }
}
